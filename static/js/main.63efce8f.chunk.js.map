{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","btns","one","two","three","four","five","six","seven","eight","nine","zero","subtract","add","multiply","divide","equals","decimal","clear","counter","Display","id","this","props","numToDisplay","React","Component","Buttons","handleClick","event","num","target","value","handleKeyPress","Object","values","forEach","e","key","className","entries","map","type","onClick","onKeyPress","tabIndex","Calc","recieveNum","setState","arrjoin","state","join","reone","retwo","rep","replace","reptwo","res","eval","shift","slice","length"],"mappings":"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","file":"static/js/main.63efce8f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\n\nconst btns = {\n  one: 1,\n  two: 2,\n  three: 3,\n  four: 4,\n  five: 5,\n  six: 6,\n  seven: 7,\n  eight: 8,\n  nine: 9,\n  zero: 0,\n  subtract: \"-\",\n  add: \"+\",\n  multiply: \"*\",\n  divide: \"/\",\n  equals: \"=\",\n  decimal: \".\",\n  clear: \"C\",\n};\nlet counter = 0;\n\nclass Display extends React.Component {\n  render() {\n    return <div id=\"display\">{this.props.numToDisplay}</div>;\n  }\n}\n\nclass Buttons extends React.Component {\n  handleClick = (event) => {\n    this.props.num(event.target.value);\n  };\n\n  handleKeyPress = (event) => {\n    Object.values(btns).forEach((e) => {\n      if (e == event.key && event.key !== \"Enter\") {\n        this.props.num(e);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"grid-container\">\n        {Object.entries(btns).map((e) => (\n          <button\n            className=\"grid-item\"\n            type=\"button\"\n            value={e[1]}\n            key={e}\n            id={e[0]}\n            onClick={this.handleClick}\n            onKeyPress={this.handleKeyPress}\n            tabIndex={0}\n          >\n            {e[1]}\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\n\nclass Calc extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { num: [\"0\"] };\n  }\n  recieveNum = (num) => {\n    //alert(this.state.num);\n    if (num === \"C\") {\n      counter = 0;\n      this.setState({\n        num: [\"0\"],\n      });\n    } else if (num === \"=\") {\n      counter = 0;\n      let arrjoin = this.state.num.join(\"\");\n      let reone = /([0-9])([\\*\\-\\+\\/]+)([\\*\\+\\/])([0-9])/g;\n      let retwo = /([0-9])([\\*\\-\\+\\/]+)([\\*\\-\\+\\/])(\\-)([0-9])/g;\n      let rep = arrjoin.replace(reone, \"$1$3$4\");\n      let reptwo = rep.replace(retwo, \"$1$3$4$5\");\n\n      let res = eval(reptwo);\n\n      this.setState({\n        num: [res],\n      });\n    } else {\n      if (this.state.num[0] == \"0\" && num != \".\") {\n        this.setState({\n          num: [this.state.num.shift()],\n        });\n      }\n\n      if (num == \".\") {\n        counter++;\n      }\n      if (num == \".\" && this.state.num[0] == \"0\") {\n        this.setState({\n          num: [\"0\", \".\"], //wtf?\n        });\n      }\n      if (num == \"+\" || num == \"-\" || num == \"*\" || num == \"/\") {\n        counter = 0;\n      }\n      if (counter > 1 && num == \".\") {\n        this.setState({\n          num: [\n            ...this.state.num,\n            this.state.num.slice(this.state.num.length - 1, 1),\n          ],\n        });\n      } else {\n        this.setState({\n          num: [...this.state.num, num],\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Display numToDisplay={this.state.num} />\n        <Buttons num={this.recieveNum} />\n      </div>\n    );\n  }\n}\n\nexport default Calc;\nReactDOM.render(<Calc />, document.getElementById(\"root\"));\n"],"sourceRoot":""}